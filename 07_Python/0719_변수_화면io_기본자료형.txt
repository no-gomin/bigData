## 변수 : 변수 선언을 위한 타입이 없고 별도의 선언 과정이 없음

a = 10
a, b = 10, 20 # 다중 변수 선언
a, b = b, a+b # 다중 변수 할당시 순차적 할당이 아니고 일괄할당
print(id(a)) # a변수의 주소
print(type(a)) # a 변수의 타입
del a

문자로 시작.
문자, 숫자, _로 변수명 작성
파이썬에서 제공되는 기본 함수명은 피한다.
파이썬 예약어는 변수명 불가





## 화면 i/o

first = input("첫번째 숫자는? ") # 반드시 str타입으로 입력됨
print('Hello', 'World', sep=' ~ ', end='\t')





## 기본 자료형

# 숫자 - int, float, complex
정수타입 나누기 정수타입 무조건 실수로 출력 ( 3 / 2 = 1.5)

# 문자 - str
''' ~~~~~~ ''' : 줄 바꿈도 그대로 적용하여 여러줄의 문자로 가능

# raw 데이터 이용 : 앞에 r을 붙이면 입력한 그대로 적용 (ex. 정규표현식)
phone_pattern = r'[\d]{2,3}-[\d]{3,4}-[\d]{4}'
# phone_pattern = '[\\d]{2,3}-[\\d]{3,4}-[\\d]{4}'
print(r"Hello\nWorld") # 출력 : Hello\nWorld 

# 논리 - bool






## 문자열 슬라이싱 : str_[from:to:by]

str_ = "0123456789"
str_[0:3] # 0번째부터 3번째 앞까지   '012'
str_[-2] # 음수인덱스는 뒤에서부터   '8'
str_[5:] #5번째 인덱스부터 끝까지   '56789'
str_[:] #처음부터 끝까지           '0123456789'
str_[5:119] # 슬라이싱에서 인덱스를 벗어나면 끝까지    '56789'
print(str_[0:9:2]) #0번재부터 2씩 증가해서 9번째 앞까지 0,2,4,6,8번째인덱스    02468
print(str_[9:0:-1]) # 9번인덱스부터 0번인덱스 전까지 -1씩 감소    987654321





## 논리형 (True, False)

False로 간주되는 것 : 0, None, ""(빈스트링), [], (), {}
True : ' ', '\0'(널문자)






