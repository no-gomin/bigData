## 배열 합치기 / 분할하기

# 인덱싱과 슬라이싱

a[2 : 5]   # 2번째부터 5번째앞까지
a[2, 2]   # 2행 2열
a[: , -2::]   # 모든 행, 마지막 전열~마지막 열
a[1:4, 0:2]  # 1~3행, 0~1열



# 두 배열을 쌓아 합치기

vstack(tup) : 아래에 추가하는 방식으로 쌓아 합침
hstack(tup) : 옆으로 추가하는 방식으로 합침
dstack(tup) : 마지막 축(열)을 쌓아 합침. 0열들끼리 쌓고 1열들끼리 쌓고
column_stack(tup) : 1차원 배열을 열단위로 배열하여 2차원 배열로 합침
row_stack(tup) : 행단위로 쌓아줌 == vstak()
stack(tup, axis=n) : axis 속성에 따라 배열을 합침
       # 0: 첫번째 차원, axis=-1이면 마지막 차원



# r, c

np.r_[a,b,c]   # 한 행으로 
np.c_[a, b, c]   # a의 요소가 1열, b의 요소가 2열, c의 요소가 3열로 들어감.



# 하나의 배열을 여러개 작은 배열로 나누기

vsplit(ary, indices_or_sections) : 첫번째 축(2차원의 경우 가로축)을 따라 분할
hsplit(ary, indices_or_sections) : 두번째 축(2차원의 경우 세로축)을 따라 분할
dsplit(ary, indices_or_sections) : 3번째 차원을 나눔
  * indices_or_sections : 정수 n (n개의 section으로 나눔 / [3,6] : 3번과 6번 인덱스 기점으로 나눔)
split(ary, indices_or_sections, axis=?) 
  * axis가 0이면 v와 동일, 1이면 h와 동일, 2이면 d와 동일
array_split(ary, indices_or_sections, axis=?)
  * 나눠지지 않는 정수로도 사용 가능 (split은 불가능)

np.vsplit(a, [2])    # 2번 인덱스기준으로 2개 배열로 분할
np.dsplit(b, 2)    #3번째 축(열)을 기준으로 2개를 분할 






